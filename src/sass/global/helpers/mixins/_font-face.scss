@use "sass:list";
@use "sass:map";
@use "sass:string";
@mixin font_face($file_name,$font_name:$file_name,$path:$font_path,$weight:normal,$style:normal) {
  @font-face {
    font-family: string.quote($font_name);
    src: url($path + $file-name + ".eot");
    src: url($path + $file-name + ".eot?#iefix") format("embedded-opentype"), url($path + $file-name + ".woff") format("woff"), url($path + $file-name + ".ttf") format("truetype"), url($path + $file-name + ".svg##{$font_name}") format("svg");
    font-weight: $weight;
		font-style: $style;
		font-display: swap;
  }
}

// =============================================================================
// String Replace
// =============================================================================

@function str-replace($string, $search, $replace: "") {
	$index: string.index($string, $search);

	@if $index {
		@return string.slice($string, 1, $index - 1) + $replace + str-replace(string.slice($string, $index + string.length($search)), $search, $replace);
	}

	@return $string;
}

// =============================================================================
// Font Face
// =============================================================================

@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
	$src: null;

	$extmods: (
		eot: "?",
		svg: "#" + str-replace($name, " ", "_")
	);

	$formats: (
		otf: "opentype",
		ttf: "truetype"
	);

	@each $ext in $exts {
		$extmod: if(map.has-key($extmods, $ext), $ext + map.get($extmods, $ext), $ext);
		$format: if(map.has-key($formats, $ext), map.get($formats, $ext), $ext);
		$src: list.append($src, url(string.quote($path + "." + $extmod)) format(string.quote($format)), comma);
	}

	@font-face {
		font-family: string.quote($name);
		font-style: $style;
		font-weight: $weight;
		src: $src;
		font-display: swap;
	}
}

